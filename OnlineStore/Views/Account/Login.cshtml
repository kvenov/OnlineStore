@using OnlineStore.Web.ViewModels.Account
@model LoginViewModel

@{
    ViewData["Title"] = "Log In";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles{
    <link rel="stylesheet" href="~/css/Account/login.css" asp-append-version="true"/>
}

<div class="login-container">
    <div class="login-card">
        <h2 class="login-title">Welcome Back</h2>
        <p class="login-subtitle">Login to your account</p>

        <form asp-action="Login" method="post" novalidate>
            <input type="hidden" asp-for="ReturnUrl" />

            <div asp-validation-summary="ModelOnly" class="validation-summary"></div>

            <div class="form-group float-label">
                <input asp-for="LoginInput" id="loginInput" required />
                <label for="loginInput">Email or Username</label>
                <span asp-validation-for="LoginInput" class="error"></span>
            </div>

            <div class="form-group float-label">
                <input asp-for="Password" type="password" id="password" required />
                <label for="password">Password</label>
                <span asp-validation-for="Password" class="error"></span>
            </div>

            <div class="checkbox-group">
                <input asp-for="RememberMe" id="remember" />
                <label for="remember">Remember me</label>
            </div>

            <button type="submit" class="btn-primary">Sign In</button>

            <div class="links">
                <a asp-action="ForgotPassword" asp-controller="Account">Forgot password?</a>
                <a asp-action="Register" asp-controller="Account" asp-route-returnUrl="@Model.ReturnUrl">Create account</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function (){
            document.querySelectorAll('.float-label input').forEach(input => {
            const parent = input.parentElement;

            if (input.value.trim() !== '') {
                parent.classList.add('active');
            }

            input.addEventListener('focus', () => {
                parent.classList.add('active');
            });

            input.addEventListener('blur', () => {
                if (input.value.trim() === '') {
                    parent.classList.remove('active');
                }
            });
        });
        })
    </script>
}